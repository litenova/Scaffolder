using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace {{ WebApiProject.Namespace }}.Models.{{ AggregateRoot.Name.Plural }}.Create;

/// <summary>
/// Represents a request to create a new {{ AggregateRoot.Name }}.
/// </summary>
public class Create{{ AggregateRoot.Name }}RequestModel
{
{{~ for member in AggregateRoot.CreateUseCase.Parameters ~}}
    /// <summary>
    /// Gets or sets {{ member.Name.Humanize }}.
    /// </summary>
    {{~ if member.IsRequired ~}}
    [Required]
    {{~ end ~}}
    public {{ if member.IsCollection }}IEnumerable<{{ if member.IsElementTypeComplex }}{{ member.ElementType }}RequestModel{{ else }}{{ member.ElementType }}{{ end }}>{{ else if member.IsComplex }}{{ member.Type }}RequestModel{{ else }}{{ member.Type }}{{ end }}{{ if !member.IsRequired }}{{ end }} {{ member.Name.PascalCase }} { get; set; }{{ if member.IsRequired }} = default!;{{ end }}

{{~ end ~}}
}

{{~ for member in AggregateRoot.CreateUseCase.Parameters ~}}
{{~ if member.IsComplex ~}}
/// <summary>
/// Represents the {{ member.Type }} model for creating a {{ AggregateRoot.Name }}.
/// </summary>
public class {{ member.Type }}RequestModel
{
    {{~ for nestedMember in member.NestedMembers ~}}
    /// <summary>
    /// Gets or sets {{ nestedMember.Name.Humanize }}.
    /// </summary>
    {{~ if nestedMember.IsRequired ~}}
    [Required]
    {{~ end ~}}
    public {{ if nestedMember.IsCollection }}IEnumerable<{{ if nestedMember.IsElementTypeComplex }}{{ nestedMember.ElementType }}RequestModel{{ else }}{{ nestedMember.ElementType }}{{ end }}>{{ else if nestedMember.IsComplex }}{{ nestedMember.Type }}RequestModel{{ else }}{{ nestedMember.Type }}{{ end }}{{ if !nestedMember.IsRequired }}{{ end }} {{ nestedMember.Name.PascalCase }} { get; set; }{{ if nestedMember.IsRequired }} = default!;{{ end }}

    {{~ end ~}}
}

{{~ end ~}}
{{~ if member.IsCollection && member.IsElementTypeComplex ~}}
/// <summary>
/// Represents the {{ member.ElementType }} model for creating a {{ AggregateRoot.Name }}.
/// </summary>
public class {{ member.ElementType }}RequestModel
{
    {{~ for nestedMember in member.NestedMembers ~}}
    /// <summary>
    /// Gets or sets {{ nestedMember.Name.Humanize }}.
    /// </summary>
    {{~ if nestedMember.IsRequired ~}}
    [Required]
    {{~ end ~}}
    public {{ if nestedMember.IsCollection }}IEnumerable<{{ if nestedMember.IsElementTypeComplex }}{{ nestedMember.ElementType }}RequestModel{{ else }}{{ nestedMember.ElementType }}{{ end }}>{{ else if nestedMember.IsComplex }}{{ nestedMember.Type }}RequestModel{{ else }}{{ nestedMember.Type }}{{ end }}{{ if !nestedMember.IsRequired }}{{ end }} {{ nestedMember.Name.PascalCase }} { get; set; }{{ if nestedMember.IsRequired }} = default!;{{ end }}

    {{~ end ~}}
}

{{~ end ~}}
{{~ end ~}}