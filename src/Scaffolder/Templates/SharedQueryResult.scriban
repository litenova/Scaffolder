using System;
using System.Collections.Generic;

namespace {{ ApplicationProject.Namespace }}.{{ AggregateRoot.Name.Plural }}.Shared;

/// <summary>
/// Represents the query result for {{ AggregateRoot.Name }} operations.
/// </summary>
public class {{ AggregateRoot.Name }}QueryResult
{
    /// <summary>
    /// Gets the unique identifier of the {{ AggregateRoot.Name }}.
    /// </summary>
    public required {{ AggregateRoot.IdType }} Id { get; init; }

    {{ for property in AggregateRoot.Properties }}
    {{ if property.Name.Original != "Id" }}
    /// <summary>
    /// Gets the {{ property.Name.Humanize }} of the {{ AggregateRoot.Name }}.
    /// </summary>
    {{ if property.IsRequired }}
    public required {{ property.Type }} {{ property.Name.PascalCase }} { get; init; }
    {{ else }}
    public {{ property.Type }}? {{ property.Name.PascalCase }} { get; init; }
    {{ end }}
    {{ end }}
    {{ end }}
}

{{ for property in AggregateRoot.Properties }}
{{ if property.IsComplex }}
/// <summary>
/// Represents the {{ property.Name.Humanize }} of a {{ AggregateRoot.Name }}.
/// </summary>
public class {{ property.Name.PascalCase }}QueryResult
{
    {{ for nestedProperty in property.NestedProperties }}
    /// <summary>
    /// Gets the {{ nestedProperty.Name.Humanize }} of the {{ property.Name.Humanize }}.
    /// </summary>
    {{ if nestedProperty.IsRequired }}
    public required {{ nestedProperty.Type }} {{ nestedProperty.Name.PascalCase }} { get; init; }
    {{ else }}
    public {{ nestedProperty.Type }}? {{ nestedProperty.Name.PascalCase }} { get; init; }
    {{ end }}
    {{ end }}
}
{{ end }}
{{ end }}